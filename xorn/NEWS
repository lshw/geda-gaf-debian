September 2015
==============

- The ripperdir field on buses is now written correctly

- Fixed a bug which caused nets to be shorted when using customizable
  power symbols

- Fixed a bug which caused some components to remain unnamed in
  hierarchical schematics


August 2015
===========

- Files which contain `\r\n' line endings are now read correctly

- Added python package `xorn.geda.netlist' which allows creating a
  netlist from one or more gEDA schematic files

- Added a set of backends (mostly from gnetlist) which output netlists
  in various formats

- Added subcommand `xorn netlist', a command-line interface to the
  netlister


May 2015
========

- Added python module `xorn.geda.clib' which implements the gEDA
  symbol library mechanism


May 2014
========

- Added python package `xorn' which provides proxy classes for easy
  access to the storage backend, base64 encoding/decoding, and helper
  functions for writing files in a safe way

- Added python package `xorn.geda' which supports reading and writing
  gEDA files and gEDA attribute handling

- Added command-line utility `xorn' with two sub-commands:
    extract - extract embedded symbols or pixmaps from a schematic
    find-symbol-by-pinout - find symbols matching a given pinout

- Python modules can now be imported from the build directory by
  adding the subdirectory `built-packages' to PYTHONPATH

- Added internationalization


April 2014
==========

- Python extension: Members of data classes can now be passed as
  constructor arguments

- Added symbol and pixmap attributes

- Python extension: All functions now raise KeyError if an object
  argument does not exist


March 2014
==========

- Storage library: Functions returning an object list now have an
  integer return type (instead of void).  They will return 0 on
  success and -1 on failure.  The returned pointer may be NULL if no
  objects are returned.

- Added API documentation.  Type `make doxygen' to build.

- New functions:
    xorn_object_is_selected (xorn.storage.object_is_selected)
    xorn_select_difference  (xorn.storage.select_difference)
    xorn_select_including   (xorn.storage.select_including)
    xorn_select_excluding   (xorn.storage.select_excluding)

- Objects now have an intrinsic order

- Text objects can be attached to net and component objects

- New functions:
    xorn_get_object_location     (xorn.storage.Revision.get_object_location)
    xorn_relocate_object         (xorn.storage.Revision.relocate_object)
    xorn_get_objects_attached_to (xorn.storage.get_objects_attached_to)
    xorn_select_attached_to      (xorn.storage.select_attached_to)

--------------------------------------------------------------------------------

Copyright (C) 2013-2015 Roland Lutz

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the ``GNU Free
Documentation License'' file as part of this distribution.
