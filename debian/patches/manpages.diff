Description: Various manpage fixes
 * Fix typo in gxyrs manpage
 * Fix whatis entry in gmk_sym
 * Fix hyphens
Forwarded: https://sourceforge.net/tracker/?func=detail&aid=2952092&group_id=161080&atid=818428
Author: أحمد المحمودي (Ahmed El-Mahmoudy) <aelmahmoudy@sabily.org>
--- a/utils/docs/garchive.1
+++ b/utils/docs/garchive.1
@@ -24,20 +24,20 @@
 
 .SH OPTIONS
 .TP
--f filename
+\-f filename
 Optional.  Used in archive mode.  Read files to archive from <filename>
 instead of garchiverc.
 .TP
--v
+\-v
 Verbose mode.
 .TP
--e
+\-e
 Extract the archive specified on the command line.
 .TP
--a
+\-a
 Create an archive. This is the default.
 .TP
--o outfile
+\-o outfile
 Optional.  Used in archive mode.  Specifies the name of the
 output archive file.  The output file extension should be ".tar.gz".
 If this flag is not specified, the output file name is
@@ -46,16 +46,16 @@
 To create an archive named MyArchive.tar.gz (the files to store listed in
 garchiverc):
 .IP
-garchive -o MyArchive.tar.gz
+garchive \-o MyArchive.tar.gz
 .PP
 Verbosely create an archive (archives files listed on cmd line
 as well as those listed in garchiverc):
 .IP
-garchive -v -o MyArchive.tar.gz README Schematic1.sch Schematic2.sch Schematic3.sch
+garchive \-v \-o MyArchive.tar.gz README Schematic1.sch Schematic2.sch Schematic3.sch
 .PP
 Extract an archive:
 .IP
-garchive -e ProjectArchive.tar.gz
+garchive \-e ProjectArchive.tar.gz
 
 .SH AUTHOR
 Stuart Brorson <sdb@cloud9.net>
--- a/utils/docs/gmk_sym.1
+++ b/utils/docs/gmk_sym.1
@@ -1,6 +1,6 @@
 .TH gmk_sym 1 "November 18th, 2012" "gEDA Project" 1.8.0.20121118
 
-.SH
+.SH NAME
 gmk_sym \- create rectangular symbols for gschem from a text file
 
 .SH SYNOPSIS
@@ -18,10 +18,10 @@
 
 .SH OPTIONS
 .TP
--d
+\-d
 Turn on debug output
 .TP
--h, -?
+\-h, \-?
 Display usage information
 
 .SH FILE FORMAT
--- a/utils/docs/gsch2pcb.1
+++ b/utils/docs/gsch2pcb.1
@@ -84,7 +84,7 @@
 never deleted, this option is rarely useful.
 .TP 8
 \fB--gnetlist\fR \fIBACKEND\fR
-In addition to the default backends, run \fBgnetlist\fR(1) with `-g
+In addition to the default backends, run \fBgnetlist\fR(1) with `\-g
 \fIBACKEND\fR', with output to `<name>.\fIBACKEND\fR'.
 .TP 8
 \fB--gnetlist-arg\fR \fIARG\fR
@@ -106,7 +106,7 @@
 .TP 8
 \fB-v\fR, \fB--verbose\fR
 Output extra debugging information.  This option can be specified
-twice (`-v -v') to obtain additional debugging for file elements.
+twice (`\-v \-v') to obtain additional debugging for file elements.
 .TP 8
 \fB-h\fR, \fB--help\fR
 Print a help message.
@@ -119,8 +119,8 @@
 A \fBgsch2pcb\fR project file is a file (not ending in `.sch')
 containing a list of schematics to process and some options.  Any
 long-form command line option can appear in the project file with the
-leading `--' removed, with the exception of `--gnetlist-arg',
-`--fix-elements', `--verbose', and `--version'.  Schematics should be
+leading `\-\-' removed, with the exception of `\-\-gnetlist-arg',
+`\-\-fix-elements', `\-\-verbose', and `\-\-version'.  Schematics should be
 listed on a line beginning with `schematics'.
 .PP
 An example project file might look like:
--- a/utils/docs/gxyrs.1
+++ b/utils/docs/gxyrs.1
@@ -115,19 +115,19 @@
 .B \fBdel_line\fP \fIchecklist\fP;
 Delete the line (global variable \fBLINE\fP) if \fIchecklist\fP is matched.
 
-Returns -1 if error, 0 if not match, 1 if match and changed.
+Returns \-1 if error, 0 if not match, 1 if match and changed.
 .TP
 .B rotate_comp \fIangle_col\fP, \fIangle\fP, \fIchecklist\fP;
 rotate the component the degrees given in \fIangle\fP parameter, if \fIchecklist\fP is matched. 
 
 The angle column number is \fIangle_col\fP.
 
-Returns 1 if match and changed, 0 if not match, -1 if error.
+Returns 1 if match and changed, 0 if not match, \-1 if error.
 .TP
 .B subst_col_val \fIcol\fP, \fIvalue\fP, \fIchecklist\fP;
 Replace a column value by the new value \fIvalue\fP, if \fIchecklist\fP is matched.
 
-Returns 1 if match and changed, 0 if not match, -1 if error.
+Returns 1 if match and changed, 0 if not match, \-1 if error.
 
 .TP
 .B change_col_units \fIunits\fP, \fIcolumn_numbers\fP;
@@ -142,7 +142,7 @@
 Adds a number to the value in a given column number.
 Note: offset and the value to be changed can be in different units.
 
-Returns -1 if error, -2 if warning, and 1 if success.
+Returns \-1 if error, \-2 if warning, and 1 if success.
 
 .TP
 .B translate_col_val \fIcol_number\fP, \fIstring\fP, \fIsubstitution\fP, \fIchecklist\fP;
@@ -150,7 +150,7 @@
 
 \fISubstitution\fP is an expression with the new string. Old column value can be used here.
 
-Returns -1 if error, 0 if not match, 1 if match and changed.
+Returns \-1 if error, 0 if not match, 1 if match and changed.
 
 Example:
   translate 2, '^([0-9]+)n$','sprintf("%dnF",$1)', 3, 'C[0-9]+';
@@ -165,30 +165,30 @@
 
 The number in the specified column number may have units at the end.
 
-Returns -1 if error, 0 if not match, 1 if match and changed.
+Returns \-1 if error, 0 if not match, 1 if match and changed.
 
 .TP
 .B swap_columns \fIcol_number1\fP, \fIcol_number2\fP, \fIchecklist\fP;
 Swap columns \fIcol_number1\fP and \fIcol_number2\fP if \fIchecklist\fP is matched.
 
-Returns -1 if error, 0 if not match, 1 if match and changed.
+Returns \-1 if error, 0 if not match, 1 if match and changed.
 
 .TP
 .B insert_column \fIcol_number\fP, \fInew_column_value\fP;
 Insert a new column in the given \fIcol_number\fP position (0 if it's going to be the first column), with the value \fInew_column_value\fP.
 
-Returns -1 if error, 1 if the new column was inserted.
+Returns \-1 if error, 1 if the new column was inserted.
 
 .SH "RETURN VALUE"
 The return value of \fBgxyrs\fP is an integer with the following possible values:
 .TP
-	1 if the command found a match and the execution was succesful
+	1 if the command found a match and the execution was successful
 .PP
 	0 if there was no match
 .PP
-	-1 if there was an error
+	\-1 if there was an error
 .PP
-	-2 if there was a warning
+	\-2 if there was a warning
 .PP
 
 .SH FILES
@@ -245,50 +245,50 @@
 .B Run an action file:
 Run the action file \fIyour_comands.txt\fP with the XYRS file \fIyour_xyrs_file.txt\fP and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs  your_xyrs_file.txt --adjust your_commands.txt --output output_file.txt
+	gxyrs  your_xyrs_file.txt \-\-adjust your_commands.txt \-\-output output_file.txt
 .PP
 .TP
 .B Run a command specified in the command line:
 Run the commands \fIyour_commands\fP wiith the XYRS file \fIyour_xyrs_file.txt\fP and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs  your_xyrs_file.txt --eval "your_commands" --output output_file.txt
+	gxyrs  your_xyrs_file.txt \-\-eval "your_commands" \-\-output output_file.txt
 .PP
 
 .TP
 .B Delete some lines matching a pattern. 
 Parse the XYRS file \fIyour_xyrs_file.txt\fP, delete all lines having a R followed by a number in column number 2, and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs your_xyrs_file.txt --eval "del 2, 'R[0-9]+';" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "del 2, 'R[0\-9]+';" \-\-output output_file.txt
 .PP
 .TP
 .B Delete some lines matching a pattern, using the column number guessed by \fBgxyrs\fP. 
 Parse the XYRS file \fIyour_xyrs_file.txt\fP, delete all lines having a R followed by a number in reference designator column, and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs your_xyrs_file.txt --eval "del \\$REF_COL, 'R[0-9]+';" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "del \\$REF_COL, 'R[0\-9]+';" \-\-output output_file.txt
 .PP
 .TP
 .B Rotate some lines matching a pattern.
 Parse the XYRS file \fIyour_xyrs_file.txt\fP, rotate by 90º all lines having a R followed by a number in reference designator column, and write the output result to the file \fIoutput_file.txt\fP. Use the rotation  and reference column number guessed by \fIgxyrs\fP:
 
-	gxyrs your_xyrs_file.txt --eval "rotate \\$ANGLE_COL, 90, \\$REF_COL, 'R[0-9]+';" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "rotate \\$ANGLE_COL, 90, \\$REF_COL, 'R[0\-9]+';" \-\-output output_file.txt
 .PP
 .TP
 .B Change all numbers to 'mm' units.
 Parse the XYRS file \fIyour_xyrs_file.txt\fP, convert all numbers in column 3 and 5 to its equivalent in mm, and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs your_xyrs_file.txt --eval "change_units 'mm', 3, 5;" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "change_units 'mm', 3, 5;" \-\-output output_file.txt
 .PP
 .TP
 .B Replace a value matching a pattern with another value.
 Parse the XYRS file \fIyour_xyrs_file.txt\fP, if the value in column 3 is "0.1u", then replace it with "100nF", and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs your_xyrs_file.txt --eval "subst 3 , '100nF', 3, '0.1u'" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "subst 3 , '100nF', 3, '0.1u'" \-\-output output_file.txt
 .PP
 .TP
 .B Change the reference of a component with a value matching a pattern.
 Parse the XYRS file \fIyour_xyrs_file.txt\fP, if the value in value column is "1n4148", then replace reference column with "D1", and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs your_xyrs_file.txt --eval "subst \\$REF_COL , 'D1', \\$VALUE_COL, '1n4148';" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "subst \\$REF_COL , 'D1', \\$VALUE_COL, '1n4148';" \-\-output output_file.txt
 .PP
 
 .TP
@@ -297,7 +297,7 @@
 
 Value in column 3 can be in other units (for example: '640mil'):
 
-	gxyrs your_xyrs_file.txt --eval "offset \\$X_COL, '102.5mm', \\$REF_COL, 'R[0-9]+' ;" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "offset \\$X_COL, '102.5mm', \\$REF_COL, 'R[0\-9]+' ;" \-\-output output_file.txt
 .PP
 
 .TP
@@ -306,25 +306,25 @@
 
 Value in column 3 can be in other units (for example: '640mil'):
 
-	gxyrs your_xyrs_file.txt --eval "mul_col_val \\$X_COL, 2.5, \\$REF_COL, 'R[0-9]+' ;" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "mul_col_val \\$X_COL, 2.5, \\$REF_COL, 'R[0\-9]+' ;" \-\-output output_file.txt
 .PP
 
 .TP
 .B Swap two columns.
 Parse the XYRS file \fIyour_xyrs_file.txt\fP, swap columns 3 and 4 if the text in column number 4 is R followed by a number, and write the output result to the file \fIoutput_file.txt\fP:
 
-	gxyrs your_xyrs_file.txt --eval "swap_columns 3, 4, 4, 'R[0-9]+' ;" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "swap_columns 3, 4, 4, 'R[0\-9]+' ;" \-\-output output_file.txt
 .PP
 
 .TP
 .B Insert a column.
 Insert a column in the first position, displacing all existing columns to the right. Column value is 'new_column_value':
 
-	gxyrs your_xyrs_file.txt --eval "insert_column 0, 'new_column_value';" --output output_file.txt
+	gxyrs your_xyrs_file.txt \-\-eval "insert_column 0, 'new_column_value';" \-\-output output_file.txt
 .PP
 
 .SH "SEE ALSO"
 .TP
 .B
 regex(7), GNU regular expression manual
-.PP
\ No newline at end of file
+.PP
--- a/utils/docs/refdes_renum.1
+++ b/utils/docs/refdes_renum.1
@@ -31,13 +31,13 @@
 When this flag is used, components on the first schematic sheet
 are numbered starting with 101.  On the second sheet, they start
 with 201, etc  Specifying a value gives the step between pages.
-For example --pgskip 10 will start with 11, 21, 31, etc.
+For example \-\-pgskip 10 will start with 11, 21, 31, etc.
 .TP
 \-\-gentle
 This flag tells refdes_renum to leave any refdeses
 alone if they already have numbers.  Use this option to number
 new components in a schematic which has already been numbered.
-Note that --gentle is set by default!
+Note that \-\-gentle is set by default!
 .TP
 \-\-force
 Set this flag to renumber all refdeses, whether they are already
--- a/utils/docs/sarlacc_schem.1
+++ b/utils/docs/sarlacc_schem.1
@@ -17,13 +17,13 @@
 
 .SH OPTIONS
 .TP
--s<n>
+\-s<n>
 Scale by n%. The default is 200%.
 .TP
--h
+\-h
 Print the help message.
 .TP
--v
+\-v
 Print the version.
 
 .SH AUTHOR
--- a/utils/docs/sarlacc_sym.1
+++ b/utils/docs/sarlacc_sym.1
@@ -18,13 +18,13 @@
 
 .SH OPTIONS
 .TP
--s <n>
+\-s <n>
 Scale by n%. The default is 200%.
 .TP
--h
+\-h
 Print out the usage information.
 .TP
--v
+\-v
 Print out the version.
 
 .SH AUTHOR
--- a/utils/docs/schdiff.1
+++ b/utils/docs/schdiff.1
@@ -57,15 +57,15 @@
 
 .TP
 Use git to view the changes to a file between two revisions
-git difftool -x schdiff 182110f690c51eb53ea1799fd022e87322d742e3 039e012397f2638d1577dd7c80fb862a5503dbfd cpu.sch
+git difftool \-x schdiff 182110f690c51eb53ea1799fd022e87322d742e3 039e012397f2638d1577dd7c80fb862a5503dbfd cpu.sch
 
 .TP
 Use mercurial to see all the changes since a specific revision
-hg schdiff -r 8442880f9835 cpld.sch
+hg schdiff \-r 8442880f9835 cpld.sch
 
 .TP
 Use subversion to review a specific revision
-svn diff --diff-cmd schdiff -c 49 power.sch
+svn diff \-\-diff-cmd schdiff \-c 49 power.sch
 
 .SH BUGS
 
